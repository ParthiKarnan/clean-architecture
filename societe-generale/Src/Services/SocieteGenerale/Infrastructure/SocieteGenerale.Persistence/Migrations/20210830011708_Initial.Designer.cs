// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocieteGenerale.Persistence;

namespace SocieteGenerale.Persistence.Migrations
{
    [DbContext(typeof(SocieteGeneraleDbContext))]
    [Migration("20210830011708_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SocieteGenerale.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5dc6d320-aed8-415c-b4c7-870626fe2c2c"),
                            CreatedDate = new DateTime(2021, 8, 30, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            DateOfBirth = new DateTime(1989, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "parthi@parthibank.com",
                            FirstName = "Parthiban",
                            IsActive = true,
                            LastName = "K",
                            MobileNumber = "9677377505"
                        },
                        new
                        {
                            Id = new Guid("d06497be-1f09-47a8-8773-05d2fea15e51"),
                            CreatedDate = new DateTime(2021, 8, 30, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            DateOfBirth = new DateTime(1991, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rmathimsc@gmail.com",
                            FirstName = "Mathiyalagan",
                            IsActive = true,
                            LastName = "R",
                            MobileNumber = "9677377506"
                        });
                });

            modelBuilder.Entity("SocieteGenerale.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c6c14e39-1a2d-40d1-a4c6-d6d1cd08d166"),
                            Amount = 0m,
                            CreatedDate = new DateTime(2021, 8, 30, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("5dc6d320-aed8-415c-b4c7-870626fe2c2c"),
                            Description = "Account Opened!",
                            IsPaid = true
                        },
                        new
                        {
                            Id = new Guid("aa079193-be82-4065-bd75-2eb6c07479ee"),
                            Amount = 100m,
                            CreatedDate = new DateTime(2021, 8, 28, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("5dc6d320-aed8-415c-b4c7-870626fe2c2c"),
                            Description = "Online shopping!",
                            IsPaid = false
                        },
                        new
                        {
                            Id = new Guid("ab31f299-80e6-45c5-96dc-de4d8e2f77e7"),
                            Amount = 200m,
                            CreatedDate = new DateTime(2021, 8, 16, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("5dc6d320-aed8-415c-b4c7-870626fe2c2c"),
                            Description = "Online shopping!",
                            IsPaid = false
                        },
                        new
                        {
                            Id = new Guid("35da2efe-f5b8-45de-a36d-4e7ca8e9fa3d"),
                            Amount = 300m,
                            CreatedDate = new DateTime(2021, 7, 31, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("5dc6d320-aed8-415c-b4c7-870626fe2c2c"),
                            Description = "Online shopping!",
                            IsPaid = false
                        },
                        new
                        {
                            Id = new Guid("e0e784a5-4e6d-40fe-a60c-f61b8a377348"),
                            Amount = 400m,
                            CreatedDate = new DateTime(2021, 7, 1, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("5dc6d320-aed8-415c-b4c7-870626fe2c2c"),
                            Description = "Online shopping!",
                            IsPaid = false
                        },
                        new
                        {
                            Id = new Guid("de49ec74-cffa-4bcb-9cb9-0808bdca256b"),
                            Amount = 500m,
                            CreatedDate = new DateTime(2021, 3, 3, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("5dc6d320-aed8-415c-b4c7-870626fe2c2c"),
                            Description = "Online shopping!",
                            IsPaid = false
                        },
                        new
                        {
                            Id = new Guid("c08c08b5-b220-46c5-ae9f-b3a342ee31f5"),
                            Amount = 0m,
                            CreatedDate = new DateTime(2021, 8, 30, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("d06497be-1f09-47a8-8773-05d2fea15e51"),
                            Description = "Account Opened!",
                            IsPaid = true
                        },
                        new
                        {
                            Id = new Guid("4bf7abba-c881-419c-9e13-f7d03729a826"),
                            Amount = 100m,
                            CreatedDate = new DateTime(2021, 8, 28, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("d06497be-1f09-47a8-8773-05d2fea15e51"),
                            Description = "Online shopping!",
                            IsPaid = false
                        },
                        new
                        {
                            Id = new Guid("653a0c85-dcfd-43c2-a826-c4d1fd10d7b0"),
                            Amount = 200m,
                            CreatedDate = new DateTime(2021, 8, 16, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("d06497be-1f09-47a8-8773-05d2fea15e51"),
                            Description = "Online shopping!",
                            IsPaid = false
                        },
                        new
                        {
                            Id = new Guid("aea91988-9453-49f5-b5c4-a200d8682dea"),
                            Amount = 300m,
                            CreatedDate = new DateTime(2021, 7, 31, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("d06497be-1f09-47a8-8773-05d2fea15e51"),
                            Description = "Account Opened!",
                            IsPaid = false
                        },
                        new
                        {
                            Id = new Guid("d9d45749-61e6-4c0b-a1a9-68582e231417"),
                            Amount = 400m,
                            CreatedDate = new DateTime(2021, 7, 1, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("d06497be-1f09-47a8-8773-05d2fea15e51"),
                            Description = "Online shopping!",
                            IsPaid = false
                        },
                        new
                        {
                            Id = new Guid("623f67d4-1619-47bd-92a7-043811cc3c3c"),
                            Amount = 500m,
                            CreatedDate = new DateTime(2021, 3, 3, 6, 47, 7, 684, DateTimeKind.Local).AddTicks(6608),
                            CustomerId = new Guid("d06497be-1f09-47a8-8773-05d2fea15e51"),
                            Description = "Online shopping!",
                            IsPaid = false
                        });
                });

            modelBuilder.Entity("SocieteGenerale.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("SocieteGenerale.Domain.Entities.Customer", "Customers")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("SocieteGenerale.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
